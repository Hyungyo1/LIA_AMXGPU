TEXT_1792+="I pretty much spend half of the time writing a line and the other half fixing the crazy characters in it. My own stream was probably boring to watch since I was coding for the most time. But livestreaming is one of the cool things to do as a spectator too. It was great seeing other people working - I had a few tabs opened on my second monitor all the time. It's actually a bit sad, because if I could, I could have spent the whole weekend just watching other people working! But I had to do my own work, so I'd only do it once in a while, when resting for a bit. Design Although I wanted some simple, low-fi, high-contrast kind of design, I ended up going with somewhat realistic (vector) art. I think it worked very well, fitting the mood of the game, but I also went overboard. For example: to know the state of a plate (who owns it, who's conquering it and how much time they have left before conquering it, which pasta units are in the queue, etc), you have to look at the plate's bill. The problem I realized when doing some tests is that people never look at the bill! They think it's some kind of prop, so they never actually read its details. Plus, if you're zoomed out too much, you can't actually read it, so it's hard to know what's going on with the game until you zoom in to the area of a specific plate. One other solution that didn't turn out to be as perfect as I thought was how to indicate who a plate base belongs to. In the game, that's indicated by the plate's decoration - its color denotes the team owner. But it's something that fits so well into the design that people never realized it, until they were told about it. In the end, the idea of going with a full physical metaphor is one that should be done with care. Things that are very important risk becoming background noise, unless the player knows its importance. Originally, I wanted to avoid any kind of heads-up display in my game. In the end, I ended up adding it at the bottom to indicate your credits and bases owned, as well as the hideous out-of-place-and-still-not-obvious 'Call Waiter' button. But in hindsight, I should have gone with a simple HUD from the start, especially"

#LIA Online for OPT-66B

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m facebook/opt-66b --dtype bfloat16 --ipex --input-tokens 32 --max-new-tokens 32 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 1 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 57 --pin-weight &> "/home/storage/data/opt66b_32_32_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m facebook/opt-66b --dtype bfloat16 --ipex --input-tokens 256 --max-new-tokens 32 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 1 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 55 --pin-weight &> "/home/storage/data/opt66b_256_32_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m facebook/opt-66b --dtype bfloat16 --ipex --input-tokens 2016 --max-new-tokens 32 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 0 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 53 --pin-weight &> "/home/storage/data/opt66b_2016_32_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m facebook/opt-66b --dtype bfloat16 --ipex --input-tokens 32 --max-new-tokens 256 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 1 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 55 --pin-weight &> "/home/storage/data/opt66b_32_256_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m facebook/opt-66b --dtype bfloat16 --ipex --input-tokens 256 --max-new-tokens 256 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 1 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 54 --pin-weight &> "/home/storage/data/opt66b_256_256_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m facebook/opt-66b --dtype bfloat16 --ipex --prompt $TEXT_1792 --max-new-tokens 256 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 0 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 53 --pin-weight &> "/home/storage/data/opt66b_1792_256_b=1.log"

#LIA Online for OPT-175B

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m ./opt-175b/ --dtype bfloat16 --ipex --input-tokens 32 --max-new-tokens 32 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 1 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 57 &> "/home/storage/data/opt175b_32_32_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m ./opt-175b/ --dtype bfloat16 --ipex --input-tokens 256 --max-new-tokens 32 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 1 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 55 &> "/home/storage/data/opt175b_256_32_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m ./opt-175b/ --dtype bfloat16 --ipex --input-tokens 2016 --max-new-tokens 32 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 0 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 53 &> "/home/storage/data/opt175b_2016_32_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m ./opt-175b/ --dtype bfloat16 --ipex --input-tokens 32 --max-new-tokens 256 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 1 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 55 &> "/home/storage/data/opt175b_32_256_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m ./opt-175b/ --dtype bfloat16 --ipex --input-tokens 256 --max-new-tokens 256 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 1 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 54 &> "/home/storage/data/opt175b_256_256_b=1.log"

OMP_NUM_THREADS=56 numactl -m 0 -C 0-55 python run.py --benchmark -m ./opt-175b/ --dtype bfloat16 --ipex --prompt $TEXT_1792 --max-new-tokens 256 --batch-size 1 --token-latency --num-iter 2 --num-warmup 1 --greedy --prefill-policy 0 --decoding-policy 1 --num-minibatch 1 --gpu-percentage 53 &> "/home/storage/data/opt175b_1792_256_b=1.log"
